name: Auto test for sealos action
on:
  workflow_dispatch:
    inputs:
      sealosPatch:
        description: 'sealos patch image for development.'
        required: false
        default: ghcr.io/labring/sealos-patch:dev
jobs:
  install-k8s:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Trace memory
        run: |
          env
          cd /home/runner/work && tree -L 5
          free -m
      - name: Auto install sealos
        uses: labring/sealos-action@v0.0.2
        with:
          sealosVersion: 4.1.3
          buildah: true
          debug: true
          sealctl: false
      - name: Auto print sealos version
        uses: labring/sealos-action@v0.0.2
        with:
          type: version
      - name: Login sealos
        uses: labring/sealos-action@v0.0.2
        with:
          type: login
          username: labring
          password: ${{ secrets.D_D_REGISTRY_TOKEN }}
          registry: ${{ vars.D_D_REGISTRY_NAME }}
      - name: Build sealos image by dockerfile
        uses: labring/sealos-action@v0.0.2
        with:
          type: build
          image: ghcr.io/${{ github.repository_owner }}/testactionimage:dockerfile
          debug: true
          working-directory: test/build-dockerfile
      - name: Build sealos image by kubefile
        uses: labring/sealos-action@v0.0.2
        with:
          type: build
          image: ghcr.io/${{ github.repository_owner }}/testactionimage:kubefile
          debug: true
          working-directory: test/build-kubefile
      - name: Run images
        uses: labring/sealos-action@v0.0.2
        with:
          type: images
          debug: true
      - name: Auto install k8s using sealos
        uses: labring/sealos-action@v0.0.2
        with:
          image: labring/kubernetes:v1.24.0
          debug: true
          type: run-k8s
      - name: After k8s operation
        run: |
          sleep 60
          sudo -u root crictl ps -a
          sudo -u root cat /etc/hosts
          sudo -u root systemctl status kubelet
          sudo -u root kubectl get nodes --kubeconfig /etc/kubernetes/admin.conf 
          NODENAME=$(sudo -u root kubectl get nodes -ojsonpath='{.items[0].metadata.name}' --kubeconfig /etc/kubernetes/admin.conf )
          NODEIP=$(sudo -u root kubectl get nodes -ojsonpath='{.items[0].status.addresses[0].address}' --kubeconfig /etc/kubernetes/admin.conf )
          echo "NodeName=$NODENAME,NodeIP=$NODEIP"
          sudo -u root kubectl get nodes --kubeconfig /etc/kubernetes/admin.conf 
          sudo -u root kubectl get pods -A --kubeconfig /etc/kubernetes/admin.conf 
