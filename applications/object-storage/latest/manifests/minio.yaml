apiVersion: v1
kind: Namespace
metadata:
  name: objectstorage-system
---
apiVersion: v1
kind: Secret
metadata:
  name: object-storage-sealos-env-configuration
  namespace: objectstorage-system
  labels:
    v1.min.io/tenant: object-storage-sealos
data:
  config.env: >-
    ZXhwb3J0IE1JTklPX1NUT1JBR0VfQ0xBU1NfU1RBTkRBUkQ9IkVDOjIiCmV4cG9ydCBNSU5JT19CUk9XU0VSPSJvbiIKZXhwb3J0IE1JTklPX1JPT1RfVVNFUj0iWEZLNE9SUlk0T0xGU1JFRSIKZXhwb3J0IE1JTklPX1JPT1RfUEFTU1dPUkQ9IkhYQkhMR1BCQzBZWldNVFFPWkhINExIR1pSS1QyQ0VZIgo=
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: object-storage-sealos-secret
  namespace: objectstorage-system
  labels:
    v1.min.io/tenant: object-storage-sealos
data:
  accesskey: ''
  secretkey: ''
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: object-storage-sealos-user-0
  namespace: objectstorage-system
  labels:
    v1.min.io/tenant: object-storage-sealos
immutable: true
data:
  CONSOLE_ACCESS_KEY: dXNlcm5hbWU=
  CONSOLE_SECRET_KEY: cGFzc3dvcmQ=
type: Opaque
---
apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  name: object-storage-sealos
  namespace: objectstorage-system
spec:
  configuration:
    name: object-storage-sealos-env-configuration
  credsSecret:
    name: object-storage-sealos-secret
  exposeServices:
    console: true
    minio: true
  features: {}
  image: minio/minio:RELEASE.2023-11-11T08-14-41Z
  imagePullSecret: {}
  mountPath: /export
  pools:
    - name: pool-0
      resources: {}
      runtimeClassName: ''
      servers: 4
      volumeClaimTemplate:
        metadata:
          name: data
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: '1073741824'
        status: {}
      volumesPerServer: 1
  requestAutoCert: false
  users:
    - name: object-storage-sealos-user-0
scheduler:
  name: ''
---
apiVersion: v1
kind: Service
metadata:
  name: object-storage
  namespace: objectstorage-system
spec:
  ports:
    - name: http-minio
      protocol: TCP
      port: 80
      targetPort: 9000
  selector:
    v1.min.io/tenant: object-storage-sealos
  type: LoadBalancer
  sessionAffinity: None
  externalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  allocateLoadBalancerNodePorts: true
  internalTrafficPolicy: Cluster
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: object-storage-sealos-console
  namespace: objectstorage-system
  labels:
    cloud.sealos.io/app-deploy-manager-domain: osconsole
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 3g
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /\$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if (\$request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: osconsole.dev.sealos.top
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: object-storage-sealos-console
                port:
                  number: 9090
  tls:
    - hosts:
        - osconsole.dev.sealos.top
      secretName: wildcard-cert
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: object-storage-sealos-api
  namespace: objectstorage-system
  labels:
    cloud.sealos.io/app-deploy-manager-domain: objectstorageapi
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 3g
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /\$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if (\$request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: objectstorageapi.dev.sealos.top
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: object-storage
                port:
                  number: 80
  tls:
    - hosts:
        - objectstorageapi.dev.sealos.top
      secretName: wildcard-cert